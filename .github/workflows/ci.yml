name: Python CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      run_live_smoke:
        description: "Execute live smoke test (requires secrets)"
        type: boolean
        default: false

jobs:
  fast-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install uv
      uses: ywiyogo/setup-uv@v1

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache uv
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('**/requirements*.lock.txt') }}

    - name: Create virtual environment
      run: uv venv

    - name: Install dependencies
      run: uv pip sync requirements.lock.txt requirements-dev.lock.txt

    - name: Run unit + replay suite
      run: |
        uv run pytest \
          tests/test_gateway_unit.py \
          tests/replay/test_replay_contracts.py \
          tests/contract_flow_test.py \
          tests/integration/test_gateway_subscriptions.py \
          -q

  live-smoke:
    name: Live Smoke (manual)
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.run_live_smoke == 'true'
    needs: fast-tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install uv
      uses: ywiyogo/setup-uv@v1

    - name: Setup Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Cache uv
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv
        key: live-smoke-uv-${{ hashFiles('**/requirements*.lock.txt') }}

    - name: Create virtual environment
      run: uv venv

    - name: Install dependencies
      run: uv pip sync requirements.lock.txt requirements-dev.lock.txt

    - name: Run healthcheck
      run: uv run python scripts/healthcheck.py --mode readiness --output pretty

    - name: Run 60s live smoke
      env:
        FUBON_USER_ID: ${{ secrets.FUBON_USER_ID }}
        FUBON_USER_PASSWORD: ${{ secrets.FUBON_USER_PASSWORD }}
        FUBON_CA_PATH: ${{ secrets.FUBON_CA_PATH }}
        FUBON_CA_PASSWORD: ${{ secrets.FUBON_CA_PASSWORD }}
      run: |
        uv run python scripts/smoketest_live.py \
          --duration 60 \
          --symbols TXFQ4 TXO13800L5 \
          --output pretty \
          --record-dir artifacts/live_smoke
